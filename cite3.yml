apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search
      tier: app
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
      labels:
        app: search
        tier: app
        version: v1
    spec:
      containers:
        - name: search
          image: ghcr.io/academey/distributed_tracing_shopping_mall-search:main
          imagePullPolicy: Always
          env:
          - name: PURCHASE_PORT
            value: "8002"
          - name: PURCHASE_HOST
            value: "purchase"
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: search
spec:
  ports:
    - port: 8001
      protocol: TCP
  selector:
    app: search
  type: ClusterIP

---
# error version search
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-error-version
spec:
  selector:
    matchLabels:
      app: search
  replicas: 1
  template: 
    metadata:
      labels:
        app: search
        version: error
    spec:
      containers:
      - name: search
        image: ghcr.io/academey/distributed_tracing_shopping_mall-search:error
        imagePullPolicy: Always
        env:
        - name: PURCHASE_PORT
          value: "8002"
        - name: PURCHASE_HOST
          value: "purchase" 
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: circuit-breaker-for-the-search-service
spec:
  host: search.default.svc.cluster.local
  trafficPolicy:
    outlierDetection:
      maxEjectionPercent: 50
      consecutive5xxErrors: 2
      interval: 10s
      baseEjectionTime: 30s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purchase
spec:
  selector:
    matchLabels:
      app: purchase
  template:
    metadata:
      labels:
        app: purchase
    spec:
      containers:
        - name: purchase
          image: ghcr.io/academey/distributed_tracing_shopping_mall-purchase:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
              protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: purchase
spec:
  type: NodePort
  ports:
    - port: 8002
      nodePort: 31002
      protocol: TCP
  selector:
    app: purchase

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: ghcr.io/academey/distributed_tracing_shopping_mall-frontend:main
          imagePullPolicy: Always
          ports:
          - containerPort: 3000
          env:
          - name: SEARCH_HOST
            value: "search"
          - name: SEARCH_PORT
            value: "8001"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
      tier: app
      version: v1
  template:
    metadata:
      labels:
        app: loadgenerator
        tier: app
        version: v1
    spec:
      containers:
        - name: loadgenerator
          image: ghcr.io/academey/distributed_tracing_shopping_mall-loadgenerator:main
          imagePullPolicy: Always
          env:
          - name: API_ENDPOINT
            value: "http://search:8001/metrics-test"

---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ad
# spec:
#   selector:
#     matchLabels:
#       app: ad
#   template:
#     metadata:
#       labels:
#         app: ad
#     spec:
#       containers:
#         - name: ad
#           image: ghcr.io/academey/distributed_tracing_shopping_mall-ad:main
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8003
#               protocol: TCP

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ad
# spec:
#   type: NodePort
#   ports:
#     - port: 8003
#       nodePort: 31003
#       protocol: TCP
#   selector:
#     app: ad

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: cart
# spec:
#   selector:
#     matchLabels:
#       app: cart
#   template:
#     metadata:
#       labels:
#         app: cart
#     spec:
#       containers:
#         - name: cart
#           image: ghcr.io/academey/distributed_tracing_shopping_mall-cart:main
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8008
#               protocol: TCP
#           env:
#           - name: PRODUCT_HOST
#             value: "product"
#           - name: PRODUCT_PORT
#             value: "8007"

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: cart
# spec:
#   type: NodePort
#   ports:
#     - port: 8008
#       nodePort: 31008
#       protocol: TCP
#   selector:
#     app: cart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
spec:
  selector:
    matchLabels:
      app: checkout
  template:
    metadata:
      labels:
        app: checkout
    spec:
      containers:
        - name: checkout
          image: ghcr.io/academey/distributed_tracing_shopping_mall-checkout:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8009
              protocol: TCP
          env:
          - name: PURCHASE_HOST
            value: "purchase"
          - name: PURCHASE_PORT
            value: "8002"
          - name: CART_HOST
            value: "cart"
          - name: CART_PORT
            value: "8008"
          - name: CURRENCY_HOST
            value: "currency"
          - name: CURRENCY_PORT
            value: "8005"
          - name: SHIPPING_HOST
            value: "shipping"
          - name: SHIPPING_PORT
            value: "8006"

---
apiVersion: v1
kind: Service
metadata:
  name: checkout
spec:
  type: NodePort
  ports:
    - port: 8009
      nodePort: 31009
      protocol: TCP
  selector:
    app: checkout
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: currency
# spec:
#   selector:
#     matchLabels:
#       app: currency
#   template:
#     metadata:
#       labels:
#         app: currency
#     spec:
#       containers:
#         - name: currency
#           image: ghcr.io/academey/distributed_tracing_shopping_mall-currency:main
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8005
#               protocol: TCP

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: currency
# spec:
#   type: NodePort
#   ports:
#     - port: 8005
#       nodePort: 31005
#       protocol: TCP
#   selector:
#     app: currency
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: email
# spec:
#   selector:
#     matchLabels:
#       app: email
#   template:
#     metadata:
#       labels:
#         app: email
#     spec:
#       containers:
#         - name: email
#           image: ghcr.io/academey/distributed_tracing_shopping_mall-email:main
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8004
#               protocol: TCP

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: email
# spec:
#   type: NodePort
#   ports:
#     - port: 8004
#       nodePort: 31004
#       protocol: TCP
#   selector:
#     app: email
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
spec:
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
      containers:
        - name: product
          image: ghcr.io/academey/distributed_tracing_shopping_mall-product:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8007
              protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: product
spec:
  type: NodePort
  ports:
    - port: 8007
      nodePort: 31007
      protocol: TCP
  selector:
    app: product
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: shipping
# spec:
#   selector:
#     matchLabels:
#       app: shipping
#   template:
#     metadata:
#       labels:
#         app: shipping
#     spec:
#       containers:
#         - name: shipping
#           image: ghcr.io/academey/distributed_tracing_shopping_mall-shipping:main
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8006
#               protocol: TCP
#           env:
#           - name: CART_HOST
#             value: "cart"
#           - name: CART_PORT
#             value: "8008"
#           - name: PRODUCT_HOST
#             value: "PRODUCT"
#           - name: PRODUCT_PORT
#             value: "8007"

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: shipping
# spec:
#   type: NodePort
#   ports:
#     - port: 8006
#       nodePort: 31006
#       protocol: TCP
#   selector:
#     app: shipping